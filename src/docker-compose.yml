version: '3.4'

services:
  # databases
  catalogdb:
    image: mongo
    ports:
        - '27017:27017'
  basketdb:
    image: redis:alpine
    ports:
        - '6379:6379'
  orderdb:
    image: mysql
    ports:
        - '3306:3306'
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      MYSQL_DATABASE: ordering_api_development
      MYSQL_USER: rails_micro
      MYSQL_PASSWORD: rails_micro
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  coregatewaydb:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: rails_micro
    ports:
        - '5432:5432'
  # brokers
  redisqueue:
    image: redis:alpine
    command: --port 6378
    ports:
        - '6378:6378'
  # services
  catalog.api:
    image: catalogapi
    build:
      context: .
      dockerfile: services/catalog_api/Dockerfile
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 8000 -b '0.0.0.0'"
    ports:
      - "8000:8000"
    environment:
      - HOST_DB=${HOST_DB}
  basket.api:
    image: basketapi
    build:
      context: .
      dockerfile: services/basket_api/Dockerfile
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 8001 -b '0.0.0.0'"
    ports:
      - "8001:8001"
    environment:
      - HOST_DB=${HOST_DB}
      - HOST_BROKER_DB=${HOST_DB}
      - PORT_BROKER_DB=${PORT_BROKER_DB}
  ordering.api:
    image: orderingapi
    build:
      context: .
      dockerfile: services/ordering_api/Dockerfile
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 8004 -b '0.0.0.0'"
    ports:
      - "8004:8004"
    environment:
      - HOST_DB=${HOST_DB}
      - HOST_BROKER_DB=${HOST_DB}
      - PORT_BROKER_DB=${PORT_BROKER_DB}
  sidekiq:
    image: orderingsidekiq
    build: 
      context: .
      dockerfile: services/ordering_api/Dockerfile
    command: bundle exec sidekiq
    environment:
      - HOST_DB=${HOST_DB}
      - HOST_BROKER_DB=${HOST_DB}
      - PORT_BROKER_DB=${PORT_BROKER_DB}
volumes:
  mongo_data:
  rabbitmq_data: