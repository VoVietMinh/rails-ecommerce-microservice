version: '3.4'

services:
  catalogdb:
    image: mongo
    ports:
        - '27017:27017'
  basketdb:
    image: redis:alpine
    ports:
        - '6379:6379'
  orderdb:
    image: mysql
    ports:
        - '3306:3306'
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      MYSQL_DATABASE: ordering_api_development
      MYSQL_USER: rails_micro
      MYSQL_PASSWORD: rails_micro
  adminerorderdb:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  redisqueue:
    image: redis:alpine
    command: --port 6378
    ports:
        - '6378:6378'
  catalog.api:
    image: catalogapi
    build:
      context: .
      dockerfile: services/catalog_api/Dockerfile
    command: bundle exec rails s -p 8000 -b 0.0.0.0
    ports:
      - "8000:8000"
  basket.api:
    image: basketapi
    build:
      context: .
      dockerfile: services/basket_api/Dockerfile
    command: bundle exec rails s -p 8001 -b 0.0.0.0
    ports:
      - "8001:8001"
  ordering.api:
    image: orderingapi
    build:
      context: .
      dockerfile: services/ordering_api/Dockerfile
    command: bash -c "bundle exec rails s -p 8004 -b 0.0.0.0"
    ports:
      - "8004:8004"
  sidekiq:
    image: orderingsidekiq
    build: 
      context: .
      dockerfile: services/ordering_api/Dockerfile
    command: bundle exec sidekiq
volumes:
  mongo_data:
  rabbitmq_data: